/* *****************************************************************************
 *  Name: JMian
 *  Date: 26 September 2019
 *  Description: RandomizedPriorityQueue.txt, Week4 Priority Queues, Algorithms Part 1 Coursera

 Randomized priority queue. Describe how to add the methods 𝚜𝚊𝚖𝚙𝚕𝚎() and 𝚍𝚎𝚕𝚁𝚊𝚗𝚍𝚘𝚖() to our
 binary heap implementation. The two methods return a key that is chosen uniformly at random
 among the remaining keys, with the latter method also removing that key. The 𝚜𝚊𝚖𝚙𝚕𝚎() method
 should take constant time; the 𝚍𝚎𝚕𝚁𝚊𝚗𝚍𝚘𝚖() method should take logarithmic time.
 Do not worry about resizing the underlying array.
 **************************************************************************** */

 Ans:
 Suppose a priority queue with n elements
 sample(): uniformly choose a random integer between 1 and n (e.g. i), and return the key at that index
 position (a[i]).

 delRandom(): uniformly choose a random integer between 1 and n (e.g. i), and exchange the key at that
 index position (a[i], key1) with the key located at the last position (a[n], key2). Return and remove key1.
 Compare key2 with its parent and child(ren) to decide whether to swim or sink.
